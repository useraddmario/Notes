192.168.32.129	main
192.168.32.130 student

Color $PS1 prompt:
https://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/

[root@localhost ~]#echo $PATH
/usr/share/Modules/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

[root@localhost ~]#vi hello
[root@localhost ~]#chmod u+x hello
[root@localhost ~]#hello
bash: hello: command not found...
[root@localhost ~]#./hello 
hello world
[root@localhost bin]#hello
hello world
[root@localhost bin]#which hello
/root/bin/hello


[root@localhost ~]#find /etc/ -exec grep -l student {} \; 2>/dev/null

find files in /etc/ and run grep on each thing found for student using grep; redirect errors to /dev/null

find /etc -size +100c -exec grep -l student {} \; 2>/dev/null


[root@localhost ~]#ls -il /etc/hosts
66233 -rw-r--r--. 1 root root 158 Sep 10  2018 /etc/hosts

[root@localhost ~]#ln /etc/hosts /root/hardhosts
[root@localhost ~]#ln -s /etc/hosts /root/symbolichosts
[root@localhost ~]#ls -il
66233 -rw-r--r--. 2 root root  158 Sep 10  2018 hardhosts
10159080 lrwxrwxrwx. 1 root root   10 Jun  1 20:51 symbolichosts -> /etc/hosts


mkdir -p files/pictures files/photos files/videos
make parent dirs


cut -f 1 -d : /etc/passwd | sort | tr [a-z] [A-Z]
cut -f 1 -d : /etc/passwd | sort | tr [:lower:] [:upper:]
converts list of first column from passwd file from lowercase to uppercase


grep -i
case insensitive

grep -A5 <username> /etc/passwd
gets 5 lines after match, B5 5 lines before

grep -R
recursive


Regex

use single quotes for regex
man 7 regex

Regex built around atoms
First Element - an atom specifies what text is to be matched, can be a single char or a dot, can be a class i.e. [[:alpha:]], [[:alnum:]], [[:digit:]] or [[:upper:]]

Second Element - Repetition operator - specifying how often a char occurs

Third Element - indicates where to find the next char


[root@localhost ~]#cat regtext 
bt
bit
bite
boot
bloat
boat
[root@localhost ~]#grep 'b.t' regtext
bit
bite
[root@localhost ~]#grep 'b.*t' regtext
bt
bit
bite
boot
bloat
boat
[root@localhost ~]#grep 'bo*t' regtext
bt
boot
[root@localhost ~]#grep 'b.?t' regtext
[root@localhost ~]#egrep 'b.?t' regtext
bt
bit
bite

^ - beginning of line
$ - end of line
\< - beginning of word
\> - end of word
* - zero or more times
+ - one or more times
? - zero or one time
{n} - exactly n times



Awk


-F : field separator
{ print $4 } - print the fourth field

awk -F : '/anna/ { print $4 }' /etc/passwd
1001

[root@localhost ~]#grep anna /etc/passwd
anna:x:1001:1001::/home/anna:/bin/bash

prints the last field - useful for lines of differing length
awk -F : '{ print $NF }' /etc/passwd
/bin/bash
/sbin/nologin
/sbin/nologin
/sbin/nologin
/sbin/nologin



ls -l /etc/ | awk '/pass/ { print }'


Sed

stream editor

[root@localhost ~]#cat sedfile 
one
two
three
four
five
[root@localhost ~]#sed -n 4p sedfile 
four

-i - writes to the file
[root@localhost ~]#sed -i s/four/FOUR/g sedfile
[root@localhost ~]#cat sedfile 
one
two
three
FOUR
five


[root@localhost ~]#sed -i -e '2d' sedfile 
[root@localhost ~]#cat sedfile 
one
three
FOUR
five



User and Group Management

useradd

usermod -aG
-a append to groups, -G alter groups

userdel -r
-r remove home dir and mail spool

passwd

/etc/login.defs


/etc/default/useradd

[root@localhost ~]#useradd -D
GROUP=100
HOME=/home
INACTIVE=-1
EXPIRE=
SHELL=/bin/bash
SKEL=/etc/skel
CREATE_MAIL_SPOOL=yes

system level defaults for users

/etc/skel
files here are automatically added to a new user's home dir
[root@localhost skel]#ls -lah
total 24K
drwxr-xr-x.   3 root root   78 Apr 23 12:47 .
drwxr-xr-x. 137 root root 8.0K Jun  2 14:16 ..
-rw-r--r--.   1 root root   18 Jan 14  2019 .bash_logout
-rw-r--r--.   1 root root  141 Jan 14  2019 .bash_profile
-rw-r--r--.   1 root root  312 Jan 14  2019 .bashrc
drwxr-xr-x.   4 root root   39 Apr 23 12:46 .mozilla


/etc/passwd
username:password:UID:GID:comment:home dir:default shell

/etc/shadow
username:password hash:min days:max days:warning threshold:account inactive days:time since account disabled

password hash = $ delimiter $hash algo$salt value$hashed password

http://www.yourownlinux.com/2015/08/etc-shadow-file-format-in-linux-explained.html


/etc/group


Group Membership

Must be a member of at least one group

Primary group membership is in /etc/passwd

primary group is group owner of files user creates

Secondary group membership is in /etc/groups

[root@localhost ~]#id student
uid=1000(student) gid=1000(student) groups=1000(student),10(wheel)


groupadd
groupdel
groupmod

lid -g <groupname>
get all users of a group

chage <username>
if you don't use switches as root it becomes interactive

pam_tally2 



Umask

umask is a default shell setting in /etc/profile that subtracts from the default permissions 

666 - default perms for files
777 - default perms for folders

if umask is 0022 a file created would default to 644; 666 - 022

can be set for individual users in their .bash_profile file


Special Permissions

SUID - can run executable files as the owner; no meaning for directory

SGID - run as group owner; will inherit the directory group owner - files created in the dir will be writable for all members of the groups

Sticky Bit - no use for files; can delete only if you are the owner


SUID - 
chmod 4770 myfile
or
chmod u+s myfile

SGID -
chmod 2770 mydir
or
chmod g+s mydir

Sticky Bit -
chmod 1770 mydir
chmod +t mydir



ACLs

the normal ACL applies to existing files only

A default ACL on a dir will apply to new files also


getfacl 
shows current settings


set facl -R -m g:<group_name>:rx /data/groups
-R recursive, -m modify, g: for group: rx permissions, directory

set facl -m d:<group_name>:rx /data/groups
sets a default acl on the directory for all new files after

setfacl -b name
-b removes all

set default acl
setfacl d:g:sales:rx /data

set default acl after acls already in place
setfacl -m d:g:sales:rx /data

default acls only work on new files so you have to run two commands one for existing and one for default




